

I am pleased to resubmit for publication the revised version of BIOINF-2017-0270 “Phylotyper: In silico predictor of subtypes from gene sequences”.

Firstly, we would like to thank the reviewers for their thoughtful comments. From the recommendations, we have made subtantual changes to the Implementation, Results and Discussion sections.  We have clarified how Phylotyper generates fewer false positive predictions when encountering novel alleles or subtypes, while maintaing high recall rates (Note: some of our statements were interpreted as Phylotyper being able to create new subtype classes de novo). We have expanded the Implementation section to include a description of the assumptions of Phylotyper, and we added additional analyses that test and compare Phylotyper's performance. I have addressed each reviewer's comments individually below:

----------------------------------------
Reviewer: 1

Comments to the Author
This is a great little tool that I can see being integrated into numerous pipelines. It moves away from the conventional MLST scheme and is a little more precise than the large scale core genome typing methods being used. I was able to successfully download, install and run the application. I also found the output files very useful and clear, something that doesn't happen enough with many bioinformatics applications.

I have two minor comments that are more "food for thought" than required revisions. I am good with the note as is, everything is clear, well cited and concise. For more information it is possible to visit the GitHub page.

"Food for thought" comments:

Although the GitHub page is well laid out and easy enough to follow, please consider including some sort of example to follow along with. As a newcomer to the application it took me a little while to figure out how to get everything exactly right for an initial run. I think a very small example to follow and run that is located early in the GitHub instructions would really help to just get things going.

Response:
We agree with the reviewer's suggestion that a working example for new users will enhance the adoption and usability of Phylotyper. We have added an "Example" section to the README.md file (which is also the landing page for Phylotyper's GitHub repository: https://github.com/superphy/insilico-subtyping/#examples) along with example data that demonstrates how to 1) predict subtypes for schemes already packaged in Phylotyper and 2) how to add and run user-defined subtype schemes.

There lies a slight issue in the "user generated sub-type schemes" in that the results that you get with Phylotyper are highly dependant on the quality of the sub-type scheme provided. Since this tool will likely be used in outbreak situations and analyses, do you have any plans to address the quality of the sub-type scheme that was used? Do you plan on having a section in the GitHub page that allows users to send new sub-type schemes for validation and posting?

Response:
The reviewer is correct that Phylotyper's performance is dependent on the input reference sequences used to build the subtype predictor. To mitigate poor prediction from unsuitable or inaccurate inputs, we included in the build pipeline, checks to automatically test the performance of any submitted subtype scheme. These checks are now described in the Implementation section.

While these checks identify major breakdowns in the training set used by Phylotyper, we note there are no checks to identify missing data, specifically, missing subtypes or key gene sequences that define the range of the subtype sequence space. For any current general subtype predictor (i.e. not predictors that replicate PCR in silico, for instance), performance is dependent on the reference input set. In dealing with missing data, we demonstrate that Phylotyper is significantly more robust than a direct sequence similarity-based predictor. It is less likely to generate a Type-I error when encountering a subtype not found in the training set. The Phylotyper method estimates the uncertainty associated with a subtype prediction.

To enhance the users understanding of the checks that are provided in the build feature and the potential blindspots in creating their own subtype predictors with Phylotyper, we have greatly expanded the Implementation section and the README provided with the software. The added content describes the validations in Phylotyper, how they work and what they detect. In the Discussion section, we also provide guidelines for selecting sequences for an effective subtype predictor. We also included in the manuscript a new analysis that demonstrates how Phylotyper versus a BLAST-based predictor performs when an entire subtype class is removed from the training set and used as test input. This analysis and results have been added to the Results and Discussions sections.

The reviewer suggests having a means for users to submit subtypes for evaluation and posting to a shared repository. We agree that this would be a helpful system. We now mention in the manuscript and on the README, that users can contact us and submit new or modified subtype schemes. We will check the submitted schemes and add them to our Github repository for general use.

----------------------------------------
Reviewer: 2

Comments to the Author
General comments:
Whiteside et al present here a novel python package for the prediction of bacterial molecular subtypes that are widely used in public health surveillance and outbreak analysis. The release of such a bioinformatic tools is highly valuable and timely with the democratization of WGS in microbiology laboratories worldwide. The article would benefit from some rewriting to provide more details to the reader regarding the use of Phylotyper and how to extend Phylotyper use to other bacteria than Escherichia coli.  Furthermore, a comparison of Phylotyper performance with other existing tools that the authors mention in the introduction would be welcome to assess the strength and weaknesses of this interesting phylogenetic approach.

Major comments:
Introduction:
1.      The authors should elaborate on the "current subtype systems" for readers that would not be familiar with clinical microbiology standards.

Response:
We added a high-level description of subtyping methods to the Introduction, which relates how subtyping can be categorized as phenotype- or DNA-based, with specific examples in each category. We feel this will give the readers an understanding of the breadth of subtyping methods. We also describe the characteristics of the subtypes that have been adapted for in silico prediction with WGS data. Our intention was to convey the wide range of subtyping approaches, and how certain subtyping approaches have been targeted for prediction with WGS data.

Implementation:
2.      Phylotyper currently only has a scheme for Escherichia coli, which limits its use, and the interest resides in the possibility to build schemes for other bacteria. Therefore, it would be useful for the reader to have more information regarding how to build a new scheme in the contribution, and for example which existing resources of typing schemes could be used for main pathogens.

Response:
A detailed step-by-step account of how to run Phylotyper's automated build pipeline is provided in the Phylotyper package instructions. We reference and link to these instructions in the Implementation section. We also added to the Implementation section a description of the requirements in Phylotyper for new subtype schemes as well as the checks that the pipeline automatically performs to validate subtypes schemes created by users. In the Discussion section, we elaborate on the ideal sequence regions that should be targeted by users when developing a new WGS-based predictor of subtypes with Phylotyper.  To address the recommendation for providing existing typing schemes, we added in the Discussion section, some current examples of subtyping schemes in other pathogens outside of E. coli that can be predicted with Phylotyper. We did not systematically go through all main pathogens to identify the subtyping schemes that can be predicted with Phylotyper. As we state in our revised Discussion, the subtype schemes that can be linked biologically to a specific genome sequence region are the best candidates for WGS-based predictors. To compile a complete list of these type of subtypes requires domain knowledge in the pathogen (our lab works with E. coli, hence the initial focus in Phylotyper's resources on E. coli). We did identify and mention select examples in diverse pathogens to show that Phylotyper is not limited to E. coli. Phylotyper can work with any suitable subtype. Identifying a suitable subtype, however, requires knowledge of the subtype and its underlying biological mechanism. To help expand Phylotyper to other pathogens, we added a request in the manuscript and on the Phylotyper website for Microbiologists to send us either subtype schemes or additions/corrections to existing subtype schemes.  Subtype schemes that we receive will be packaged into the Phylotyper repository for download and general use. 


3.      Please provide more details regarding the “assumptions of the Phylotyper approach” and how/why they would be violated when building new subtype schemes.

Response: 
The Phylotyper assumptions are now outlined in the Implementation section. The revised Implementation section covers the basis of the assumptions, how they can be violated, and two built-in mechanisms we developed to alert users of possible violations.

Results:
4.      Whiteside et al compare here their tool with another BLAST based approach that they have developed for the comparison, and not methods published by other groups. The description of the method used for both the BLAST method and the cross validation is imprecise and would benefit from more being more detailed within the main article rather than in the supplementary material. Moreover, a comparison - at least theoretical - with other existing tools would strengthen the uniqueness of Phylotyper highlighted in the discussion.

Response:
Our main goal in the performance assessment was to compare how the prediction methods generalize to an independent dataset. There may exist differences in the reference training sets that underpin the tools and these differences may mask the true performance of the method. We wanted to evaluate the predictive capability of the methods themselves. SeroTypeFinder is provided as a web service. The software for SeroTypeFinder has not been made publicly available. Without access to the software, we cannot manipulate the training and test datasets to perform cross-validation analysis. The EcOH tool works directly on unassembled small reads and not assembled genome sequences. A direct comparison of the performance with these tools with Phylotyper is not possible. The intention of using a general BLAST-based approach is to demonstrate the benefit of Hidden State Prediction with a phylogenetic tree over approaches that directly match input sequences against a reference database. BLAST, as used in our assessment with a percent identity and coverage cutoff, is the same method used in the SeroTypeFinder tool. EcOH employs a more sophisticated algorithm for matching alleles in order to filter out spurious small reads that might align by chance. At its core, it is still matching alleles and does not develop a model of subtype allele evolution to define boundaries on the subtypes. We feel that our performance comparison to the generalized BLAST-based method does make a valid case for using HSP in subtype prediction. We did add a direct comparison of Phylotyper to V-typer for Stx genes. The V-typer comparison results are summarized in the Results section and provided fully in the Supplementary Information.

To address the comment that the BLAST and cross-validation method descriptions are imprecise, we have added more thorough descriptions of the BLAST method and the cross-validation analysis in the Results section. Our aim with the revised descriptions is to provide readers sufficient information to give them a complete understanding of the mechanics of the methods. Implementation details, such as percent identity cutoff or the number of iterations, remain in Supplementary Information. This was done to fit with the page constraints of the Application Note format.

As suggested, we also added a theoretical comparison of the tools to the Discussion; the theoretical comparison looks at use cases (assembled vs unassembled WGS), potential issues (false positive rates), and additional benefits outside of performance for the tools (prediction confidence values).


Discussion:
5.      There is no data to support the claim that Phylotyper easily identifies novel subtype. Did the author try to remove all alleles of one subtype and compute the predictions to see if/how phylotyper creates a consistent subtype? Also, when a new subtype is identified, does Phylotyper includes it in his typing scheme automatically? What would be the recommended tests/further analysis recommended to researchers using Phylotyper in the case a new subtype is identified?

Response:
The point we were trying to convey was that more frequently, Phylotyper correctly handles novel subtypes than existing methods. In our empirical testing, we found Phylotyper makes fewer Type-I errors when encountering a novel allele of an existing subtype or an allele with an entirely new subtype not found in the reference training set. In the former case, Phylotyper returns non-significant/undetermined. We have clarified this point throughout the manuscript, removing references to Phylotyper identifying novel subtypes and replacing it with the more nuanced description that Phylotyper more frequently correctly classifies novel subtypes as a negative result or correctly classifies novel alleles with subtypes in the database. To strengthen this statement, we have as the reviewers suggest, added an analysis where we remove entire subtypes from the training set and calculated the false positive rate. Phylotyper was found to have a much lower false positive rate when classifying genes with unknown subtypes.

Phylotyper does not have the ability to create subtype schemes de novo or to add new subtype classes on the fly. We have not explored this potential application of the Phylotyper method. It would be an interesting avenue to explore as using a phylogenetic model of subtype evolution to define boundaries for new or existing subtypes might make a nice complement to existing de novo strategies like MLST that assign every new allele a separate subtype. However, our goal in this manuscript is to present an alternative genome-based subtype prediction method. De novo subtype creation is outside our original intended applications for Phylotyper.

6.      “Subtypes are mainly used [..] the main uses of subtype information”. Please revise this paragraph, to allow a better logical flow. Also, Debroy et al have shown the discrepancy between between serotype-based typing and the genetic similarity of O antigen gene clusters, suggesting to replace serotyping by molecular typing. They did not particularly emphasize discrepancies between existing molecular typing scheme and whole genome data as suggested by Whiteside et al.

Response:

We have revised this paragraph and clarified our point on the suitability of Phylotyper for predicting subtypes from WGS; namely that Phylotyper helps identify discrepancies between a subtype and the genome regions that are used for prediction. We cite Debroy et al., as an example of how the associated genetic data and subtype schemes can have discrepancies.

Minor comments:
1.      The abstract mentions a python package only whereas the text in the implementation mentions python and R. Please revise where necessary.

Response:
Corrected.

2.      “The main input into Phylotyper is assembled genome sequences”. Please mention the format type (apparently fasta).

Response:
Corrected.

3.      “… in addition to Stx include intimin and serotyping” Please revise the sentence.

Response:
Change made.

4.      Replace aslo by also

Response:
Corrected.

5.      Revise the sentence “This type of approach, there is…”.

Response:
Sentence replaced.

Figure 1.
6.      Please check the label that is cut on the side of the figure. Also, what does the letter at the end of each label correspond to - the expected subtype whereas the predicted subtype is color coded? Please better describe in the legend. Or remove if this is redundant information.

Response:
We removed the subtype letters at the end of the label; this was redundant information that was also conveyed by the color. Also we added a sentence in the figure description explaining the meaning of the colors. Labels are fixed so they fit in the window.

7.      The colors used by Phylotyper could be improved to increase readability of the output for the allele labels. There are several good packages to select colors within R or python.

Response:
We switched to the discriminatory palette "Set1" in R's RColorBrewer package. Phylotyper now uses RColorRamp and this palette to generate sufficient colors for all subtypes.

Sup. Figure 1.
8.      Please plot the legend so that it does not overall the labels

Response:
Legend placement has been moved to the margin.

9.      Labels are too close and therefore difficult to read if there were several query allele as an input.

Response:
Spacing has been increased.

Supplementary table S2:
1.      Four or five E. coli schemes?

Response:
The E. coli serotypes available in Phylotyper comprise two schemes: O- and H-type (prevously, incorrectly counted as one), resulting in five tested schemes. The reference to four has been removed.

----------------------------------------
Reviewer: 3

Comments to the Author
It's good to see a typing tool that is based on phylogenetic analysis. As public health practitioners still need to compare WGS data to old typing results, this tool will be useful to them.  Moreover, by putting typing into the framework of phylogenetic analysis, this tool can provide an interesting learning/visualization tool for epidemiologists and other public health practitioners to bridge the gap between subtypes (categorical data) and a tree (continuous data). The tool appears to be well implemented.
Some Specific Comments that the authors should address:
Major:
1) Please comment on what happens when an incomplete loci is found in the WGS data. Does the software warn the users of an partial alignment due to incomplete gene?

Response:
Complete or nearly complete loci sequences are needed for correctly placing the allele in the phylogenetic tree. To prevent incomplete sequences being used, we set coverage cutoffs of 90% in the BLAST detection step. No alleles with less than this coverage to one of the reference set sequences will pass the detection step. Users are notified when no gene copies are found. I have added a description of the requirement for complete gene sequences to the Implementation section.


2) Please clarify how novel subtypes/alleles are identified and reported.

Response
Phylotyper is significantly more robust than a direct sequence similarity-based predictor in handling novel subtypes or alleles. We did not mean that Phylotyper performs unsupervised construction of new subtype schemes, rather, that Phylotyper has significantly lower false positive rates when performing prediction on an allele that is not in the reference set or an allele for which there is no example with the same subtype in the reference set (i.e. novel subtype). In the case of a novel subtype, Phylotyper would not assign the allele any subtype.  Compare this result with a sequence similarity approach, which, in most cases assign the novel subtype the closest subtype based on sequence.

To clarify this distinction, we have modified the text and removed all references of "Phylotyper identifying novel alleles", replacing it with the more specific statement.  We have also performed and included a subsequent analysis comparing the accuracy of the BLAST-based approach to the Phylotyper approach when the entire subtype group is withheld from the training set. This analysis examines the performance of the tools when encountering a novel subtype. It showed that Phylotyper is a marked improvement over the sequence-similarity approach, as Phylotyper more frequently returns a true negative result and not an incorrect subtype prediction.

3) As there is a trend moving to core-genome or whole-genome MLST typing schemes, please comment if Phylotyper could be scaled up to handle that. How would horizontal gene transfer or recombination affect the Phylotyper results?

Response:
The Phylotyper approach is not designed for core-genome or whole-genome MLST schemes. The value that Phylotyper provides is that it can take input gene sequences and return predictions for subtypes that cannot be directly inferred from the gene sequences alone. For example, PCR or restriction digestion-based subtyping schemes are an abstraction of the underlying gene sequences and in most cases, cannot be directly inferred from an in silico genome sequence. We have demonstrated the ability of Phylotyper to accurately predict a PCR-based subtype (Stx1 and Stx2) as well as a phenotype-based scheme (O-type:H-type serotype). 

Subtypes that are directly identified from the genome sequence do not require imputation from a software tool. In MLST, the combination of each unique allele sequence defines the type.  Potentially, and this is perhaps what the reviewer is referring to, a specific region of the genome that is smaller than the sequence regions used in an MLST, exists that can be used as a proxy to predict MLST subtype. The benefit, in this case, is that the entire genome would not need to be sequenced (or multiple alleles interrogated) in order to predict MLST type. There is a precedent for this type of approach.  The spa and coa genes in Staphylococcus aureus are used as gene markers to infer population variation.  The spa and coa types have noted concordance with MLST typing. While this is an interesting potential new application for Phylotyper, it is outside the scope of what we originally designed Phylotyper for.

Horizontal gene transfer or recombination could impact the result of Phylotyper in situations where the reference gene sequences used to predict subtype are only correlated with the subtype and not causative of the subtype. If the sequences used to predict the subtype scheme produce gene products that determine the subtype, such as the O-antigen processing genes for E. coli being used to predict O-group serotypes, the Phylotyper prediction should directly correspond to the subtype. In contrast, if sequences that are correlated but have no biological link are used, HGT could recombine a particular gene allele with a new subtype. We have made the readers aware of this potential issue and added to the Discussion section recommendations for users building subtype schemes to focus on genomic regions that have a direct biological role.

Minor:
1) Typo in line 49: also not aslo

Response:
Change made.

2) Line 51 mentioned assumptions for building new subtype pipeline.  It'll be good to explain that or if space is an issue, point to the portion of the manual that explains these assumptions

Response:
We have added descriptions of the Phylotyper method assumptions to the Implementation section. The revised Implementation section covers the basis of the assumptions, how they can be violated, and two built-in mechanisms we developed to alert users of possible violations.

----------------------------------------